@model CSharpSoChiTieu.Models.HistorySearchOutput
@using CSharpSoChiTieu.common;
@{
    Layout = null;
}

<div class="table-responsive">
    <div class="d-flex justify-content-between align-items-center px-3 py-2">
        <p class="text-sm mb-0">
            Hiển thị <strong>@Model.RowCount</strong> danh mục trong tổng số <strong>@Model.PageCount</strong> trang
        </p>
    </div>
    <table class="table align-items-center mb-0">
        <thead>
            <tr>
                <th class="text-uppercase text-secondary text-xxs font-weight-bolder opacity-7">Khoản thu chi</th>
                <th class="text-center text-uppercase text-secondary text-xxs font-weight-bolder opacity-7">Số tiền</th>
                <th class="text-uppercase text-secondary text-xxs font-weight-bolder opacity-7 ps-2">Loại</th>
                <th class="text-center text-uppercase text-secondary text-xxs font-weight-bolder opacity-7">Ngày</th>
                <th class="text-center text-uppercase text-secondary text-xxs font-weight-bolder opacity-7">Thao tác</th>
            </tr>
        </thead>
        <tbody>
            @if (Model.Data != null && Model.Data.Any())
            {
                foreach (var item in Model.Data)
                {
                    <tr>
                        <td>
                            <div class="d-flex px-2 py-1">
                                <div class="d-flex flex-column justify-content-center">
                                    <h6 class="mb-0 text-sm">@item.Description</h6>
                                </div>
                            </div>
                        </td>
                        <td class="align-middle text-center text-sm">
                            <span class="text-@(item.Type == IncomeExpenseType.Income ? "success" : "danger") font-weight-bold">
                                @item.Amount.ToString("N0") đ
                            </span>
                        </td>
                        <td>
                            <span class="badge badge-sm @(item.Type == IncomeExpenseType.Income ? "bg-gradient-success" : "bg-gradient-danger")">
                                @(item.Type == IncomeExpenseType.Income ? "Khoản thu" : "Khoản chi")
                            </span>
                        </td>
                        <td class="align-middle text-center">
                            <span class="text-secondary text-xs font-weight-bold">
                                @(item.Date.HasValue ? item.Date.Value.ToString("dd/MM/yyyy") : "")
                            </span>
                        </td>
                        <td class="align-middle text-center">
                            <a href="~/History/Edit/@item.Id" class="btn btn-link text-primary mb-0">
                                <i class="material-symbols-rounded">edit</i>
                            </a>
                            <a href="javascript:void(0)" onclick="deleteItem(@item.Id)" class="btn btn-link text-danger mb-0">
                                <i class="material-symbols-rounded">delete</i>
                            </a>
                        </td>
                    </tr>
                }
            }
            else
            {
                <tr>
                    <td colspan="6" class="text-center py-4">
                        <div class="text-muted">
                            <i class="material-symbols-rounded">search_off</i>
                            <p class="mt-2">Không tìm thấy dữ liệu</p>
                        </div>
                    </td>
                </tr>
            }
        </tbody>
    </table>
</div>

@if (Model.Data != null && Model.Data.Any())
{
    <div class="d-flex justify-content-center mt-4">
        
        <nav aria-label="Page navigation">
            <ul class="pagination pagination-info">
                @{
                    var totalPages = (int)Math.Ceiling((double)Model.RowCount / Model.PageSize);
                    var startPage = Math.Max(1, Model.Page - 2);
                    var endPage = Math.Min(totalPages, startPage + 4);
                    startPage = Math.Max(1, endPage - 4);
                }

                @if (Model.Page > 1)
                {
                    <li class="page-item">
                        <a class="page-link" href="javascript:void(0)" onclick="doSearch(@(Model.Page - 1))">
                            <i class="material-symbols-rounded">chevron_left</i>
                        </a>
                    </li>
                }

                @for (int i = startPage; i <= endPage; i++)
                {
                    <li class="page-item @(i == Model.Page ? "active" : "")">
                        <a class="page-link" href="javascript:void(0)" onclick="doSearch(@i)">@i</a>
                    </li>
                }

                @if (Model.Page < totalPages)
                {
                    <li class="page-item">
                        <a class="page-link" href="javascript:void(0)" onclick="doSearch(@(Model.Page + 1))">
                            <i class="material-symbols-rounded">chevron_right</i>
                        </a>
                    </li>
                }
            </ul>
        </nav>
    </div>
}

<script>
    function deleteItem(id) {
        if (confirm('Bạn có chắc chắn muốn xóa mục này?')) {
            $.ajax({
                url: '/History/Delete/' + id,
                type: 'POST',
                success: function (result) {
                    if (result.success) {
                        doSearch(@Model.Page);
                    } else {
                        alert('Có lỗi xảy ra khi xóa mục này.');
                    }
                },
                error: function () {
                    alert('Có lỗi xảy ra khi xóa mục này.');
                }
            });
        }
    }
</script>