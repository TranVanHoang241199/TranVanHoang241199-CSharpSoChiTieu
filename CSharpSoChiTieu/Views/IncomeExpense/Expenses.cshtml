@*
    For more information on enabling MVC for empty projects, visit https://go.microsoft.com/fwlink/?LinkID=397860
*@
@{
	ViewData["Title"] = "Thêm Khoản Chi"; // Đặt tiêu đề trang
}
@* <i class="fas fa-edit me-2"></i> *@

<div class="card mb-4 shadow-sm">
	<div class="card-header pb-2 px-3">
		<h6 class="mb-0 text-primary"><i class="fas fa-edit me-2"></i>@ViewBag.Title</h6>
	</div>
	<div class="card-body p-3">
		<form id="addExpenseForm" class="needs-validation" novalidate>
			@* Ngày Thu *@
			<div class="d-flex align-items-center mb-3">
				<label for="income-date" class="form-label small fw-bold mb-0 me-3 text-nowrap flex-shrink-0" style="width: 70px;">Ngày thu <span class="text-danger">*</span></label>
				<div class="input-group input-group-static flex-grow-1">
					<span class="input-group-text"><i class="fas fa-calendar-day"></i></span>
					<input type="date" class="form-control" id="income-date" name="IncomeDate" required value="@DateTime.Now.ToString("yyyy-MM-dd")">
				</div>
			</div>

			@* Số tiền *@
			<div class="d-flex align-items-center mb-1">
				<label for="income-amount" class="form-label small fw-bold mb-0 me-3 text-nowrap flex-shrink-0" style="width: 70px;">Số tiền <span class="text-danger">*</span></label>
				<div class="input-group input-group-static flex-grow-1">
					<input type="text" class="form-control" id="income-amount" name="Amount" placeholder="0" required inputmode="decimal">
					<span class="input-group-text">VNĐ</span>
				</div>
			</div>

			@* Ghi chú *@
			<div class="d-flex align-items-center mb-3">
				<label for="income-note" class="form-label small fw-bold mb-0 me-3 text-nowrap flex-shrink-0" style="width: 70px;">Mô tả</label>
				<div class="input-group input-group-static flex-grow-1">
					<span class="input-group-text"><i class="fas fa-pencil-alt"></i></span>
					<input type="text" class="form-control" id="income-note" name="Note" placeholder="Mô tả">
				</div>
			</div>

			<!-- Danh mục -->
			<div id="IncomeExpenseCateogry"></div>

			<input type="hidden" id="IncomeExpense-category-id" name="CategoryId" value="" required />
			<div class="invalid-feedback" id="category-validation-feedback" style="display:none; margin-top:-10px; margin-bottom: 10px;">Vui lòng chọn một danh mục.</div>

			<!-- Nút lưu -->
			<button type="submit" class="btn btn-primary w-100 py-2 fw-bold mt-3">
				<i class="fas fa-save me-2"></i> Thêm khoản chi
			</button>

		</form>
	</div>
</div>




<style>
	/* Begin: Danh Mục */

	.btn-category.active {
		background-color: #0d6efd; /* Màu xanh dương khi active */
		color: white;
	}
	/* End: Danh Mục */

	/* Responsive adjustments */
	@@media (max-width: 767.98px) {
		.card-body {
			padding: 0.8rem !important;
		}

		.form-label {
			margin-bottom: 0.25rem !important;
		}
	}
</style>

<script>
	$(document).ready(function() {
		clickDanhMucDoiMau();

		EventGanIdChoCategory(); // Gắn sự kiện click cho danh mục

		addDataExpenses();

		loadFormCategoryEI(2);

		loadFormHistory();

		updateSummary();
	});

	function addDataExpenses() {
		$("#addExpenseForm").submit(function (e) {
			e.preventDefault();

			var form = $(this);
			form.removeClass("was-validated"); // reset Bootstrap validation

			// Lấy dữ liệu từ form
				var formData = {
					Amount: parseFloat($("#income-amount").val().replace(/,/g, "")),
					Date: $("#income-date").val(),
					Description: $("#income-note").val(),
					CategoryId: $("#IncomeExpense-category-id").val(),
					Type: "Expense"
				};

			$.ajax({
				url: "/IncomeExpense/Save",
				type: "POST",
				data: formData,
				success: function (res) {
					// Hiển thị thông báo thành công hoặc reset form
					//alert("Lưu thành công!");
					form.trigger("reset");
					form.removeClass("was-validated");
					// Load lại danh sách (nếu cần)
					loadForm("expense");
				},
				error: function (xhr) {
					form.addClass("was-validated");

					// Gỡ lỗi cũ
					$(".field-validation-error").remove();
					$(".is-invalid").removeClass("is-invalid");

					if (xhr.responseJSON && xhr.responseJSON.errors) {
						let errors = xhr.responseJSON.errors;
						for (let key in errors) {
							let input = $("[name='" + key + "']");
							if (input.length > 0) {
								input.addClass("is-invalid");
								input.after(`<div class="field-validation-error text-danger">${errors[key]}</div>`);
							}
						}
					} else {
						//alert("Có lỗi xảy ra khi lưu dữ liệu.");
					}
				}
			});
		});
	}


	function clickDanhMucDoiMau() {
		// Sự kiện click cho tất cả các nút danh mục
		$(".btn-category").click(function() {
			// Xóa lớp "active" khỏi tất cả các nút
			$(".btn-category").removeClass("active");

			// Thêm lớp "active" vào nút đang được click
			$(this).addClass("active");
		});
	}


		function loadFormCategoryEI(type) {
		$.ajax({
			url: "/IncomeExpense/Category?type=" + type,
			type: "GET",
			success: function (data) {
				$("#IncomeExpenseCateogry").html(data);
			},
			error: function () {
				alert("Không tải được danh mục.");
			}
		});
	}


	function EventGanIdChoCategory() {
		// Do loadFormCategoryEI(2) có thể load thêm danh mục mới
		// nên phải dùng .on('click') để gán sự kiện động
		$(document).on("click", ".btn-category", function () {
			var categoryId = $(this).data("category-id"); // Lấy id
			$("#IncomeExpense-category-id").val(categoryId);    // Gán vào input hidden

			// Ẩn thông báo lỗi nếu có
			$("#category-validation-feedback").hide();

			// Đổi màu nút: clear tất cả, active cái được chọn
			$(".btn-category").removeClass("btn-primary").addClass("btn-light");
			$(this).removeClass("btn-light").addClass("btn-primary");
		});
	}


</script>
