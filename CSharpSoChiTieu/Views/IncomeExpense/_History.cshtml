﻿@using CSharpSoChiTieu.Business.Services;
@using CSharpSoChiTieu.common;
@model List<IEGroupViewModel>



<div class="card h-100 shadow-sm">

	@* Begin: header *@
	<div class="card-header pb-0 px-3">
		<div class="row align-items-center mb-2">
			<div class="col-6">
				<h6 class="mb-0 text-primary">
					<i class="fas fa-history me-2"></i>Thu chi gần đây
				</h6>
			</div>

			<div class="col-6 d-flex justify-content-end">
				<select id="select-range" class="form-select form-select-sm shadow-none" style="border-radius: 0.5rem; min-width: 80px;">
					<option value="today">Hôm nay</option>
					<option value="week">Tuần này</option>
					<option value="month" selected>Tháng này</option>
					<option value="year">Năm này</option>
				</select>
			</div>
		</div>
	</div>
	@* End: header *@


	@* ** Hiển thị danh sách thu chi ** *@
	<div class="card-body pt-2 p-3" style="max-height: 400px; overflow-y: auto;" id="history_id">
		@foreach (var group in Model)
		{
			<label>Ngày @group.Date.ToString("dd/MM/yyyy")</label>
			<div class="income-list-container mb-3">
				<ul class="list-group list-group-flush">
					@foreach (var item in group.Items)
					{
						var amountClass = item.Type == IncomeExpenseType.Income
						? "text-success"
						: "text-danger";

						<li class="list-group-item border-0 d-flex justify-content-between align-items-center ps-1 pe-1 mb-1 income-item"
							data-id="@item.Id"
							data-type="@item.Type"
							data-amount="@item.Amount"
							data-description="@item.Description"
							data-date="@item.Date?.ToString("yyyy-MM-dd")"
							style="cursor: pointer;">
							<div class="d-flex align-items-center">
								<div class="icon icon-shape icon-xs text-center rounded-circle me-2" style="background-color: @item.CategoryColor; width: 24px; height: 24px; display: flex; align-items: center; justify-content: center;">
									@item.CategoryIcon
								</div>
								<div class="d-flex flex-column text-truncate">
									<h6 class="mb-0 text-dark text-sm">@item.Description</h6>
									<span class="text-xs text-muted">@item.CategoryName</span>
								</div>
							</div>
							<div class="@amountClass text-gradient text-sm fw-bold ms-2 text-nowrap">
								@(item.Type == IncomeExpenseType.Income ? "+" : "-")@item.Amount.ToString("N0") ₫
							</div>
						</li>
					}
				</ul>
			</div>
		}
	</div>


</div>

<!-- Small Action Dialog -->
<div id="actionDialog" class="position-fixed bg-white shadow-sm rounded" style="display: none; z-index: 1000; min-width: 120px;">
	<ul class="list-group list-group-flush">
		<li class="list-group-item py-1 px-2 action-edit" style="cursor: pointer; font-size: 0.875rem;">
			<i class="material-symbols-rounded align-middle me-1" style="font-size: 1rem;">edit</i>
			Chỉnh sửa
		</li>
		<li class="list-group-item py-1 px-2 action-delete" style="cursor: pointer; font-size: 0.875rem;">
			<i class="material-symbols-rounded align-middle me-1" style="font-size: 1rem;">delete</i>
			Xóa
		</li>
	</ul>
</div>

<!-- Modal Dialog -->
<div class="modal fade" id="incomeExpenseModal" tabindex="-1" aria-labelledby="incomeExpenseModalLabel" aria-hidden="true">
	<div class="modal-dialog modal-dialog-centered">
		<div class="modal-content">
			<div class="modal-header">
				<h5 class="modal-title" id="incomeExpenseModalLabel">Chỉnh sửa</h5>
				<button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
			</div>
			<div class="modal-body">
				<form id="incomeExpenseForm">
					<input type="hidden" id="itemId" name="id" />

					<div class="d-flex align-items-center mb-3">
						<label for="income-date" class="form-label small fw-bold mb-0 me-3 text-nowrap flex-shrink-0" style="width: 70px;">Ngày <span class="text-danger">*</span></label>
						<div class="input-group input-group-static flex-grow-1">
							<span class="input-group-text"><i class="fas fa-calendar-day"></i></span>
							<input type="date" class="form-control" id="income-date" name="IncomeDate" required value="@DateTime.Now.ToString("yyyy-MM-dd")">
						</div>
					</div>

					@* Ghi chú *@
					<div class="d-flex align-items-center mb-3">
						<label for="income-note" class="form-label small fw-bold mb-0 me-3 text-nowrap flex-shrink-0" style="width: 70px;">Ghi chú <span class="text-danger">*</span></label>
						<div class="input-group input-group-static flex-grow-1">
							<span class="input-group-text"><i class="fas fa-pencil-alt"></i></span>
							<input type="text" class="form-control" id="income-note" name="Note" placeholder="Ghi chú">
						</div>
					</div>

					@* Số tiền *@
					<div class="d-flex align-items-center mb-1">
						<label for="income-amount" class="form-label small fw-bold mb-0 me-3 text-nowrap flex-shrink-0" style="width: 70px;">Số tiền <span class="text-danger">*</span></label>
						<div class="input-group input-group-static flex-grow-1">
							<input type="text" class="form-control" id="income-amount" name="Amount" placeholder="0" required inputmode="decimal" onkeyup="formatNumber(this)">
							<span class="input-group-text">VNĐ</span>
						</div>
					</div>

					
					<div class="d-flex align-items-center mb-1">
						<label for="income-amount" class="form-label small fw-bold mb-0 me-3 text-nowrap flex-shrink-0" style="width: 70px;">Số tiền <span class="text-danger">*</span></label>
						<select>
							<option value="icon">icon</option>
						</select>
					</div>
				</form>
			</div>
			<div class="modal-footer">
				<button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Đóng</button>
				<button type="button" class="btn btn-primary" id="btnSave">Lưu</button>
			</div>
		</div>
	</div>
</div>

<style>
	.action-edit:hover {
		background-color: #f8f9fa;
	}

	.action-delete:hover {
		background-color: #f8f9fa;
		color: #dc3545;
	}

	#actionDialog {
		border: 1px solid rgba(0,0,0,.1);
	}

		#actionDialog .list-group-item {
			border: none;
			border-radius: 0;
		}

			#actionDialog .list-group-item:first-child {
				border-top-left-radius: 0.25rem;
				border-top-right-radius: 0.25rem;
			}

			#actionDialog .list-group-item:last-child {
				border-bottom-left-radius: 0.25rem;
				border-bottom-right-radius: 0.25rem;
			}
</style>

<script>
	$(document).ready(function () {
		var modal = new bootstrap.Modal(document.getElementById('incomeExpenseModal'));
		var currentItemId = null;
		var actionDialog = $('#actionDialog');
		var currentItem = null;

		// Xử lý chọn khoảng thời gian
		$("#select-range").change(function () {
			var selectedRange = $(this).val();
			updateSummary(selectedRange);
			getDataHistoryIE(selectedRange);
		});

		function getDataHistoryIE(range) {
		// Loading nhẹ trong đúng cái box thu chi
		$('#history_id').html('<div class="text-center p-5"><div class="spinner-border text-primary"></div></div>');

		$.ajax({
			url: '/IncomeExpense/History',
			type: 'GET',
			data: { range: range },
			success: function (result) {
				var newContent = $(result).find('#history_id').html();
				$('#history_id').html(newContent); // ✨ Chỉ thay nội dung trong #history_id thôi
			},
			error: function () {
				$('#history_id').html('<div class="text-danger text-center p-4">Lỗi khi tải dữ liệu.</div>');
			}
		});
	}

		// Xử lý click vào item
		$('.income-item').click(function(e) {
			e.stopPropagation();
			currentItem = $(this);
			currentItemId = currentItem.data('id');

			// Đóng dialog cũ nếu có
			actionDialog.hide();

			// Tính toán vị trí hiển thị dialog
			var rect = currentItem[0].getBoundingClientRect();
			actionDialog.css({
				'top': rect.bottom + 'px',
				'left': rect.left + 'px',
				'min-width': rect.width + 'px'
			}).show();
		});

		// Đóng dialog khi click ra ngoài
		$(document).click(function() {
			actionDialog.hide();
		});

		// Xử lý click vào nút chỉnh sửa
		$('.action-edit').click(function(e) {
			e.stopPropagation();
			actionDialog.hide();

			// Hiển thị modal chỉnh sửa
			$('#itemId').val(currentItemId);
			$('#itemType').val(currentItem.data('type'));
			$('#itemAmount').val(currentItem.data('amount'));
			$('#itemDescription').val(currentItem.data('description'));
			$('#itemDate').val(currentItem.data('date'));
			modal.show();
		});

		// Xử lý click vào nút xóa
		$('.action-delete').click(function(e) {
			e.stopPropagation();
			if (confirm('Bạn có chắc chắn muốn xóa giao dịch này?')) {
				$.ajax({
					url: '/IncomeExpense/Delete/' + currentItemId,
					type: 'DELETE',
					success: function(response) {
						currentItem.remove();
						actionDialog.hide();
						var selectedRange = $("#select-range").val();
							updateSummary(selectedRange);
					},
					error: function() {
						alert('Có lỗi xảy ra khi xóa');
					}
				});
			}
		});

		// Xử lý nút Lưu trong modal
		$('#btnSave').click(function() {
			var formData = {
				id: $('#itemId').val(),
				type: $('#itemType').val(),
				amount: $('#itemAmount').val(),
				description: $('#itemDescription').val(),
				date: $('#itemDate').val()
			};

			$.ajax({
				url: '/IncomeExpense/Update',
				type: 'PUT',
				data: formData,
				success: function(response) {
					// Cập nhật UI
					modal.hide();
					location.reload(); // hoặc cập nhật item cụ thể
				},
				error: function() {
					alert('Có lỗi xảy ra khi cập nhật');
				}
			});
		});
	});
</script>