@model CSharpSoChiTieu.Business.Services.ReportViewModel
@using CSharpSoChiTieu.Business.Services
@using CSharpSoChiTieu.common;
@using System.Text.Json;

@{
    var currencies = (List<CurrencyViewModel>)ViewBag.Currencies;
    var selectedCurrencyCode = ViewBag.SelectedCurrency as string;
    var selectedCurrencyObject = currencies?.FirstOrDefault(c => c.Code == selectedCurrencyCode);
    var selectedCurrencySymbol = selectedCurrencyObject?.Symbol ?? selectedCurrencyCode;
    // Helper for displaying type as Vietnamese
    Func<IncomeExpenseType, string> getTypeText = t => t == IncomeExpenseType.Income ? "Khoản thu" : "Khoản chi";
}

<div class="container-fluid py-4">
    <!-- Khối lọc dữ liệu -->
    <div class="row mb-4">
        <div class="col-12">
            <div class="card shadow-sm">
                <div class="card-body p-3">
                    <form class="row g-3 align-items-center">

                        <!-- Loại giao dịch: thu/chi -->
                        <div class="col-12 col-md-3">
                            <label for="typeFilter" class="form-label fw-bold mb-1">Loại giao dịch</label>
                            <select id="typeFilter" class="form-select form-select-sm" onchange="applyFilters()">
                                <option value="all">Tất cả</option>
                                <option value="income">Khoản thu</option>
                                <option value="expense">Khoản chi</option>
                            </select>
                        </div>

                        <!-- Tiền tệ -->
                        <div class="col-12 col-md-3">
                            <label for="currency-filter" class="form-label fw-bold mb-1">Đơn vị tiền tệ</label>
                            <select id="currency-filter" name="currency" class="form-select form-select-sm" onchange="applyFilters()">
                                @if (ViewBag.Currencies != null)
                                {
                                    var selectedCurrency = ViewBag.SelectedCurrency as string;
                                    foreach (var currency in (List<CurrencyViewModel>)ViewBag.Currencies)
                                    {
                                        <option value="@currency.Code" data-symbol="@currency.Symbol" selected="@(currency.Code == selectedCurrency ? "selected" : null)">
                                            @currency.Code
                                        </option>
                                    }
                                }
                            </select>
                        </div>

                        <!-- Từ ngày -->
                        <div class="col-6 col-md-2">
                            <label for="dateFrom" class="form-label fw-bold mb-1">Từ ngày</label>
                            <input type="date" id="dateFrom" class="form-control form-control-sm" onchange="applyFilters()" />
                        </div>

                        <!-- Đến ngày -->
                        <div class="col-6 col-md-2">
                            <label for="dateTo" class="form-label fw-bold mb-1">Đến ngày</label>
                            <input type="date" id="dateTo" class="form-control form-control-sm" onchange="applyFilters()" />
                        </div>

                        <!-- Khoảng thời gian -->
                        <div class="col-12 col-md-2">
                            <label for="select-range" class="form-label fw-bold mb-1">Thời gian</label>
                            <select id="select-range" class="form-select form-select-sm" onchange="handleDateRangeChange()">
                                <option value="all" selected>Tùy chọn</option>
                                <option value="today">Hôm nay</option>
                                <option value="week">Tuần này</option>
                                <option value="month">Tháng này</option>
                                <option value="year">Năm này</option>
                            </select>
                        </div>

                    </form>
                </div>
            </div>
        </div>
    </div>


    <!-- Thống kê tổng quan -->
    <div class="row">
        <div class="col-xl-3 col-sm-6 mb-xl-0 mb-4 income-card">
            <div class="card">
                <div class="card-body p-3">
                    <div class="row">
                        <div class="col-8">
                            <div class="numbers">
                                <p class="text-sm mb-0 text-uppercase font-weight-bold">Tổng thu</p>
                                <h5 class="font-weight-bolder text-success" id="totalIncome">
                                    @Model.TotalIncome.ToString("N0") @selectedCurrencySymbol
                                </h5>
                            </div>
                        </div>
                        <div class="col-4 text-end">
                            <div class="icon icon-shape bg-gradient-success shadow text-center border-radius-md">
                                <i class="material-symbols-rounded text-lg opacity-10">arrow_upward</i>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="col-xl-3 col-sm-6 mb-xl-0 mb-4 expense-card">
            <div class="card">
                <div class="card-body p-3">
                    <div class="row">
                        <div class="col-8">
                            <div class="numbers">
                                <p class="text-sm mb-0 text-uppercase font-weight-bold">Tổng chi</p>
                                <h5 class="font-weight-bolder text-danger" id="totalExpense">
                                    @Model.TotalExpense.ToString("N0") @selectedCurrencySymbol
                                </h5>
                            </div>
                        </div>
                        <div class="col-4 text-end">
                            <div class="icon icon-shape bg-gradient-danger shadow text-center border-radius-md">
                                <i class="material-symbols-rounded text-lg opacity-10">arrow_downward</i>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="col-xl-3 col-sm-6 mb-xl-0 mb-4 balance-card">
            <div class="card">
                <div class="card-body p-3">
                    <div class="row">
                        <div class="col-8">
                            <div class="numbers">
                                <p class="text-sm mb-0 text-uppercase font-weight-bold">Số dư</p>
                                <h5 class="font-weight-bolder" id="balance">
                                    @Model.Balance.ToString("N0") @selectedCurrencySymbol
                                </h5>
                            </div>
                        </div>
                        <div class="col-4 text-end">
                            <div class="icon icon-shape bg-gradient-info shadow text-center border-radius-md">
                                <i class="material-symbols-rounded text-lg opacity-10">account_balance</i>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="col-xl-3 col-sm-6 transaction-card">
            <div class="card">
                <div class="card-body p-3">
                    <div class="row">
                        <div class="col-8">
                            <div class="numbers">
                                <p class="text-sm mb-0 text-uppercase font-weight-bold">Số giao dịch</p>
                                <h5 class="font-weight-bolder" id="transactionCount">
                                    @Model.TotalTransactions
                                </h5>
                            </div>
                        </div>
                        <div class="col-4 text-end">
                            <div class="icon icon-shape bg-gradient-warning shadow text-center border-radius-md">
                                <i class="material-symbols-rounded text-lg opacity-10">receipt_long</i>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Biểu đồ và bảng thống kê -->
    <div class="row mt-4">
        <!-- Biểu đồ thu chi theo tháng -->
        <div class="col-lg-7 mb-lg-0 mb-4">
            <div class="card">
                <div class="card-header pb-0 p-3">
                    <h6 class="mb-2">Biểu đồ thu chi</h6>
                </div>
                <div class="card-body p-3">
                    <div class="chart">
                        <canvas id="chart-line" class="chart-canvas" height="300"></canvas>
                    </div>
                </div>
            </div>
        </div>

        <!-- Biểu đồ tròn phân bố chi tiêu -->
        <div class="col-lg-5">
            <div class="card">
                <div class="card-header pb-0 p-3">
                    <h6 class="mb-0">Phân bố theo danh mục</h6>
                </div>
                <div class="card-body p-3">
                    <div class="chart">
                        <canvas id="chart-pie" class="chart-canvas" height="300"></canvas>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Bảng thống kê chi tiết -->
    <div class="row mt-4">
        <div class="col-12">
            <div class="card mb-4">
                <div class="card-header pb-0">
                    <h6>Thống kê chi tiết theo danh mục</h6>
                </div>
                <div class="card-body px-0 pt-0 pb-2">
                    <div class="table-responsive p-0">
                        <table class="table align-items-center mb-0">
                            <thead>
                                <tr>
                                    <th class="text-uppercase text-secondary text-xxs font-weight-bolder opacity-7">Danh mục</th>
                                    <th class="text-uppercase text-secondary text-xxs font-weight-bolder opacity-7 ps-2">Loại</th>
                                    <th class="text-center text-uppercase text-secondary text-xxs font-weight-bolder opacity-7">Số tiền</th>
                                    <th class="text-center text-uppercase text-secondary text-xxs font-weight-bolder opacity-7">Tỷ lệ</th>
                                </tr>
                            </thead>
                            <tbody id="category-stats-body">
                                @foreach (var item in Model.CategoryStats)
                                {
                                    <tr class="category-row" data-type="@(item.Type == IncomeExpenseType.Income ? "income" : "expense")">
                                        <td>
                                            <div class="d-flex px-2 py-1">
                                                <div class="d-flex flex-column justify-content-center">
                                                    <h6 class="mb-0 text-sm">@item.CategoryName</h6>
                                                </div>
                                            </div>
                                        </td>
                                        <td>
                                            <span class="badge badge-sm @(item.Type == IncomeExpenseType.Income ? "bg-success" : "bg-danger")">
                                                @getTypeText(item.Type)
                                            </span>
                                        </td>
                                        <td class="align-middle text-center text-sm">
                                            <span class="text-@(item.Type == IncomeExpenseType.Income ? "success" : "danger") font-weight-bold">
                                                @item.Amount.ToString("N0") @selectedCurrencySymbol
                                            </span>
                                        </td>
                                        <td class="align-middle text-center">
                                            <div class="progress-wrapper w-75 mx-auto">
                                                <div class="progress-info">
                                                    <div class="progress-percentage">
                                                        <span class="text-xs font-weight-bold">@item.Percentage%</span>
                                                    </div>
                                                </div>
                                                <div class="progress">
                                                    <div class="progress-bar bg-@(item.Type == IncomeExpenseType.Income ? "success" : "danger")"
                                                         role="progressbar"
                                                         aria-valuenow="@item.Percentage"
                                                         aria-valuemin="0"
                                                         aria-valuemax="100"
                                                         style="width: @item.Percentage%">
                                                    </div>
                                                </div>
                                            </div>
                                        </td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@section scripts {
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <script>
        // Biến toàn cục cho biểu đồ
        var lineChart, pieChart;
        var selectedCurrency = '@selectedCurrencySymbol';

        // Helper function to get type text in Vietnamese
        function getTypeTextVN(type) {
            // 0: Income, 1: Expense
            return type === 1 ? 'Khoản thu' : 'Khoản chi';
        }

        // Khởi tạo ban đầu
        $(document).ready(function() {
            initializeCharts();
            applyFilters();
        });

        // Hàm khởi tạo biểu đồ
        function initializeCharts() {
            var lineCtx = document.getElementById('chart-line').getContext('2d');
            lineChart = new Chart(lineCtx, {
                type: 'line',
                data: { labels: [], datasets: [] },
                options: {
                    responsive: true,
                    maintainAspectRatio: false,
                }
            });

            var pieCtx = document.getElementById('chart-pie').getContext('2d');
            pieChart = new Chart(pieCtx, {
                type: 'pie',
                data: { labels: [], datasets: [] },
                options: {
                    responsive: true,

                    maintainAspectRatio: false,
                    plugins: {
                        legend: {
                            position: 'bottom',
                        }
                    }
                }
            });
        }

        // Hàm xử lý khi thay đổi khoảng thời gian
        function handleDateRangeChange() {
            const range = $('#select-range').val();
            const now = new Date();
            let from, to;

            switch (range) {
                case 'today':
                    from = to = now;
                    break;
                case 'week':
                    from = new Date(now.setDate(now.getDate() - now.getDay() + 1));
                    to = new Date(now.setDate(now.getDate() - now.getDay() + 7));
                    break;
                case 'month':
                    from = new Date(now.getFullYear(), now.getMonth(), 1);
                    to = new Date(now.getFullYear(), now.getMonth() + 1, 0);
                    break;
                case 'year':
                    from = new Date(now.getFullYear(), 0, 1);
                    to = new Date(now.getFullYear(), 11, 31);
                    break;
                default: // 'all'
                    $('#dateFrom').val('');
                    $('#dateTo').val('');
                    applyFilters();
                    return;
            }

            // Format YYYY-MM-DD
            $('#dateFrom').val(from.toISOString().split('T')[0]);
            $('#dateTo').val(to.toISOString().split('T')[0]);

            applyFilters();
        }

        // Hàm áp dụng bộ lọc
        function applyFilters() {
            var currencyDropdown = $('#currency-filter');
            var selectedOption = currencyDropdown.find('option:selected');

            var filters = {
                type: $('#typeFilter').val(),
                currency: currencyDropdown.val(),
                dateFrom: $('#dateFrom').val() ? $('#dateFrom').val() : null,
                dateTo: $('#dateTo').val() ? $('#dateTo').val() : null,
            };
            selectedCurrency = selectedOption.data('symbol') || filters.currency;

            $.ajax({
                url: '/Report/FilterReport',
                type: 'POST',
                contentType: 'application/json',
                data: JSON.stringify(filters),
                success: function(data) {
                    updatePage(data);
                },
                error: function(error) {
                    console.error("Lỗi khi lọc dữ liệu:", error);
                }
            });
        }

        // Hàm cập nhật toàn bộ trang với dữ liệu mới
        function updatePage(data) {
            // Cập nhật thẻ thống kê
            $('#totalIncome').text(data.totalIncome.toLocaleString('vi-VN') + ' ' + selectedCurrency);
            $('#totalExpense').text(data.totalExpense.toLocaleString('vi-VN') + ' ' + selectedCurrency);
            $('#balance').text(data.balance.toLocaleString('vi-VN') + ' ' + selectedCurrency);
            $('#transactionCount').text(data.totalTransactions);
            $('#balance').removeClass('text-success text-danger').addClass(data.balance >= 0 ? 'text-success' : 'text-danger');


            // Cập nhật biểu đồ đường
            lineChart.data.labels = data.monthlyStats.map(s => s.month);
            var filterType = $('#typeFilter').val();
            lineChart.data.datasets = [
                {
                    label: 'Thu',
                    data: data.monthlyStats.map(s => s.income),
                    borderColor: '#2dce89',
                    tension: 0.4,
                    hidden: filterType === 'expense'
                },
                {
                    label: 'Chi',
                    data: data.monthlyStats.map(s => s.expense),
                    borderColor: '#f5365c',
                    tension: 0.4,
                    hidden: filterType === 'income'
                }
            ];
            lineChart.update();

            // Cập nhật biểu đồ tròn
            var pieLabels = data.categoryStats.map(cs => cs.categoryName);
            var pieData = data.categoryStats.map(cs => cs.amount);
            pieChart.data.labels = pieLabels;
            pieChart.data.datasets = [{
                data: pieData,
                backgroundColor: [
                    '#2dce89', '#f5365c', '#fb6340', '#11cdef', '#5e72e4', '#8898aa',
                     '#ffd600', '#ff6b6b', '#6b48ff', '#ff9f40'
                ]
            }];
            pieChart.update();

            // Cập nhật bảng thống kê chi tiết
            var tableBody = $('#category-stats-body');
            tableBody.empty();
            if (data.categoryStats.length === 0) {
                 tableBody.append('<tr><td colspan="4" class="text-center">Không có dữ liệu</td></tr>');
            } else {
                data.categoryStats.forEach(function(item) {
                    var typeClass = item.type === 1 ? 'success' : 'danger'; // 0: Income, 1: Expense
                    var typeText = getTypeTextVN(item.type); // Sử dụng tiếng Việt
                    var row = `
                        <tr>
                            <td>
                                <div class="d-flex px-2 py-1">
                                    <div class="d-flex flex-column justify-content-center">
                                        <h6 class="mb-0 text-sm">${item.categoryName}</h6>
                                    </div>
                                </div>
                            </td>
                            <td><span class="badge badge-sm bg-${typeClass}">${typeText}</span></td>
                            <td class="align-middle text-center text-sm">
                                <span class="text-${typeClass} font-weight-bold">${item.amount.toLocaleString('vi-VN')} ${selectedCurrency}</span>
                            </td>
                            <td class="align-middle text-center">
                                <div class="progress-wrapper w-75 mx-auto">
                                    <div class="progress-info">
                                        <div class="progress-percentage">
                                            <span class="text-xs font-weight-bold">${item.percentage}%</span>
                                        </div>
                                    </div>
                                    <div class="progress">
                                        <div class="progress-bar bg-${typeClass}" role="progressbar" aria-valuenow="${item.percentage}"
                                             aria-valuemin="0" aria-valuemax="100" style="width: ${item.percentage}%"></div>
                                    </div>
                                </div>
                            </td>
                        </tr>`;
                    tableBody.append(row);
                });
            }
        }
    </script>
}